<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

   <style>
    *{
        margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;  
    /* overflow-x: hidden; */
}
header{
    background-color: black;
    color: white;
    display: flex;
    padding: 1.2rem;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    flex-wrap: wrap;

}
.main{
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
}
.main .right{
    /* width: calc(100% - 10px); */
    width: 100%;
    max-width: 880px;
    padding: 20px;

    overflow-y:auto ;
    height: 550px;
    /* margin: 25px; */
    /* margin-left: 20px; */
    /* border: 2px solid black; */
    background-color: #F4F2EE;
    scrollbar-width: none; /* For Firefox */
    -ms-overflow-style: none;
}
.main .right::-webkit-scrollbar{
    display: none;
}
.main .left{

    width: 300px;margin: 25px;
    background-color: white;
    /* height: 100%; */

}
.left .profileImg{
   
    margin-left: auto;
    margin-right: auto;
    width: 230px;
    height: 230px;
    border: 2px solid black;
    margin-top: 20px;
    border-radius: 50%;
    overflow: hidden;
    background-image: url('<%= userData.profileImg  %>');
    background-size: cover;
}
.small-profile{
   
 
   width: 65px;
   height: 65px;
   border: 2px solid black;
   margin-top: 20px;
   border-radius: 50%;
   overflow: hidden;
   background-image: url('<%= userData.profileImg  %>');
   background-size: cover;
}
.info{
    text-align: center;
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 8px;
}
.actions{
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
    margin-top: 60px;
}
.actions a{
    text-decoration: none;
    padding: 0.6rem;
    background-color: black;
    color: white;
    background-color: black;
}
.top{
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
}
span h3{
    text-decoration: underline;
    display: inline;
}
.making_inline{
    display: inline;
}
.logo{
    width: 100px;
  margin: 0;
}
.post-data-box{
    width: 450px;
    border-radius: 20px;
}
.logo img{
    width: 100%;
}
#creating{
    width: 600px;
}
@media (max-width:986px)
{
    .post-data-box{
        max-width: 300px;
    }
    .main{
        gap: 4rem;
        height: 100vh;
    }
    .main::-webkit-scrollbar{
        display: none;
    }
    .right{
        padding: 0.6rem;
        position: relative;
        left: -5px;
        /* width: 120px; */
    }
    *{
        /* overflow-x: hidden; */
    }
    #creating{
    width: 350px;
  } 
}
@media (max-width:415px) {
    .post-data-box{
        width: 280px;
    }
}
@media (max-width:400px) {
    .post-data-box{
        width: 265px;
    }
    .small-profile{
        width: 35px;
        height: 35px;
    }

}
@media (max-width:377px) {
    .post-data-box{
        width: 255px;
    }
}
@media (max-width:364px) {
    .post-data-box{
        width: 240px;
    }
}
@media (max-width:348px) {
    .post-data-box{
        width: 225px;
    }
}
@media (max-width:330px) {
    .post-data-box{
        width: 210px;
    }
}
@media (max-width:310px) {
    .post-data-box{
        width: 190px;
    }
}
@media (max-width:291px) {
    .post-data-box{
        width: 185px;
    }
}
/* Notification Tab Styling */
.notification-tab {
    position: fixed;
    bottom: 20px;
    right: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 9.5px;
    cursor: pointer;
    width: 150px; /* Adjust width as needed */
    background-color: #4CAF50; /* Change to desired background color */
    border-radius: 20px;
    padding: 10px;
    color: white;
}

/* Notification Badge Styling */
.notification-badge {
    background-color: red; /* Badge background color */
    color: white;
    border-radius: 50%;
    padding: 4px 8px;
    font-size: 12px;
}

/* Notification Content Styling (Icon or Text) */
.notification-content img {
    width: 30px; /* Adjust icon size */
    height: auto;
    margin-right: 10px; /* Space between badge and content */
}
.notification-panel {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 20px;
    max-width: 80%;
    width: 300px;
    z-index: 999;
}

.notification-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}

.notification-header span {
    font-weight: bold;
}

.close-btn {
    border: none;
    background: none;
    cursor: pointer;
    font-size: 18px;
    line-height: 1;
}
   </style>
</head>
<body>
    <header id="header">
        <div class="logo">
            <img src="/logo.png" alt="Logo">
           </div>
        <h2>
            Welcome <%= userData.name %> <br/>
        </h2>
        <h4>

            <a id="logout" style="text-decoration: none; color:  white; border: 2px solid white ; padding: 0.5rem; overflow: hidden; " href="http://localhost:3001/logout">Logout</a>
        </h4>
    </header>
    <div style="display: flex; justify-content: center;">
        <div class="main">
            <div class="left">
                <div class="profileImg">
                    </div>
                    <div class="info">
                        <div>
    
                            <span class="making_inline"><h3>Name:</h3></span>  <h3><%= userData.name %></h3>
                        </div>
                        <div>
    
                            <span class="making_inline"><h3>Email:</h3></span> <h3><%= userData.email %></h3>
                        </div>
                        <div>
    
                            <span class="making_inline"><h3>Bio:</h3></span> <h3><%= userData.description %></h3>
                        </div>
                    </div>
                    <div class="actions">
                        <a href="">Update Profile</a>
                        <a id="del-acc" style="cursor: pointer;">Delete Account</a>
                        <a href="http://localhost:3001/users">Connect to Users</a>
                        <a href="#">Following</a>
                        <a href="http://localhost:3001/chats">Chats</a>
                    </div>
            </div>
            <div class="right">
                    <div class="top">
                    <!-- <div class="small-profile"></div> -->
                    <div id="create-post" style="margin-top: 18px;width: 300px; border: 2px solid gray; cursor: pointer; height: 100%;padding: 0.7rem; border-radius: 20px;">
                        Start a post
                          </div>
                </div>
                <br>
                
                <hr>
                <div style="text-align: center;margin-top: 40px;">
                    <h3 style="margin-bottom: 20px;"> Posts</h3>
                <% if (userPosts.length > 0) { %>
                   
                        <% userPosts.forEach(post => { %>
                           <div class="post-data-box" style=" margin-left: auto; margin-right: auto; margin-bottom: 20px; display: flex; justify-content: center;flex-direction: column; align-items: center; border: 2px solid black; padding: 0.65rem;  ">
                            
                           <div>
                            <div style="display: flex; gap: 9px; align-items: center;">
    
                                <div class="small-profile" style="width: 35px; height: 35px;  "></div>
                                <h4 style="position: relative; top: 9px; "> <%= userData.name %> </h4>
                            </div>
    
                    <div style="display: flex; gap: 8px; flex-direction: column;">
                        <p style="margin-bottom: 10px;text-align: left; font-size: 13px; margin-top: 10px;"><%= post.postDesc %></p>
                                <div style=" display: flex; justify-content: center; margin-left: auto; margin-right: auto;   " class="post-image">
                                <img style="width: 100%;" src="<%= post.imageUrl %>" alt="">
                            </div>
                            </div>
                           </div>
                                <!-- Display other post details -->
                          
                           </div>
                        <% }); %>
                   
                <% } else { %>
                    <p>Its all empty here. Create your new post now.</p>
                <% } %>
                </div>
            </div>
            <div class="notifications">
                <div class="notification-tab">
                    <!-- <div class="notification-badge">3</div> -->
                    <div class="notification-content" style="height: 20px;">
                        <i class="fas fa-bell" style="margin-right: 7px;"></i>
                        <b class="noti">Notifications</b>
                        <div class="loading-spinner" style="display: none; justify-content: center;">
                            <img src="/loading.gif" alt="Loading..." style="width: 130px; height: 100px; position: relative;  top: -40px; ">
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
    <script>
        function sendRequestReject(senderId) {
    console.log('rejected from', senderId);
    fetch('http://localhost:3001/reject-connection', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id: senderId }),
    })
    .then(response => {
        // Handle the response from the server
        console.log('Response:', response);
        // document.href = 'http://localhost:3001/user/<%= userData._id %>'
        location.reload();
    })
    .catch(error => {
        // Handle errors
        console.error('Error:', error);
    });
}

         function sendRequest(senderId) {
    console.log('accepted from', senderId);
    fetch('http://localhost:3001/accept-connection', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id: senderId }),
    })
    .then(response => {
        // Handle the response from the server
        console.log('Response:', response);
        // document.href = 'http://localhost:3001/user/<%= userData._id %>'
        location.reload();
    })
    .catch(error => {
        // Handle errors
        console.error('Error:', error);
    });
}

        // Frontend JavaScript code in your EJS file
        document.addEventListener('DOMContentLoaded', function() {
    const notificationTab = document.querySelector('.notification-tab');
    const mainContent = document.querySelector('.main');
    let notificationsVisible = false;
    function showLoading()
    {
        const loadingSpinner = document.querySelector('.loading-spinner');
        const fas = document.querySelector('.fas');
        const noti = document.querySelector('.noti');
        fas.style.display = 'none'
        noti.style.display = 'none'
        loadingSpinner.style.display = 'flex';
    }
    notificationTab.addEventListener('click', function() {
        showLoading();
        if (!notificationsVisible) {
            var notificationPanel = ` <div class="notification-header">
                            <span>Notifications</span>
                            <button class="close-btn">X</button>
                        </div>
                        <div class="notification-content">
                    <div class="loading-spinner" style="width: 140px; margin: 0 auto;">
                        <img style="width: 100%; height: auto;" src="/loading.gif" alt="Loading...">
                    </div>`;
             fetch('http://localhost:3001/pending-requests')
                .then(response => response.json())
                .then(async data => {
                    console.log(data)
                    notificationPanel = document.createElement('div');
                    notificationPanel.className = 'notification-panel';
                    notificationPanel.innerHTML = `
                        <div class="notification-header">
                            <span>Notifications</span>
                            <button class="close-btn">X</button>
                        </div>
                        <div class="notifications"></div>
                    `;
                    mainContent.style.opacity = '0';
                    mainContent.style.pointerEvents = 'none';
                    mainContent.parentElement.appendChild(notificationPanel);
                    notificationsVisible = true;

                    const notificationsDiv = notificationPanel.querySelector('.notifications');
                           // Display "No new notifications" if data is empty
                    if (data.length === 0) {
                        // loadingSpinner.remove();
                        const noNotificationsElement = document.createElement('p');
                        noNotificationsElement.textContent = 'No new notifications';
                        notificationsDiv.appendChild(noNotificationsElement);
                    } else {
                        const userPromises = data.map(notification => {
                            return fetch(`http://localhost:3001/user/${notification.senderId._id}`)
                                .then(response => response.json());
                        });

                        const usersData = await Promise.all(userPromises);

                        usersData.forEach((senderData, index) => {
                            const senderName = senderData.name;
                            const senderProfile = senderData.profileImg;
                            const status = data[index].status;
                            const notificationElement = document.createElement('p');

                            if (status === 'Pending') {
    const defaultImageURL =' https://www.pngall.com/wp-content/uploads/5/User-Profile-PNG-Clipart.png'; // Replace with your default image URL
    notificationElement.innerHTML = `
        <div style='display: flex; justify-content: center; margin-bottom: 5.6px; padding: 0.54rem; background-color: #F5FEFD; text-align: left;'>
            <div style='width: 58px; margin-right:10.5px; height: 58px; border-radius: 50px; overflow: hidden;'>
                <img style='width: 100%' src='${senderProfile}' alt='user profile image' onerror="this.onerror=null;this.src='${defaultImageURL}';"/>
            </div>
            <div>
                ${senderName} sent you a connection request<br/>
                <div style='margin-top: 3px; width: 100%; display: flex; gap: 0.7rem; justify-content: left;'>
                    <button style='cursor: pointer; padding: 0.35rem; border: none; background-color: green; color: white;' onclick='sendRequest("${senderData._id}")'>Accept</button>
                    <button style='cursor: pointer; padding: 0.35rem; border: none; background-color: red; color: white;' onclick='sendRequestReject("${senderData._id}")'>Reject</button>
                </div>
            </div>
        </div>`;
} else {
    notificationElement.innerHTML = `<div style='margin-bottom:5.6px;padding:0.54rem;background-color:lightgray;text-align:center'>${senderName} sent you a connection request</div>`;
}


                            notificationsDiv.appendChild(notificationElement);
                        });
                    }

                    const closeBtn = notificationPanel.querySelector('.close-btn');
                    closeBtn.addEventListener('click', function() {
                        const loadingSpinner = document.querySelector('.loading-spinner');
        const fas = document.querySelector('.fas');
        const noti = document.querySelector('.noti');
        fas.style.display = 'inline'
        noti.style.display = 'inline'
        loadingSpinner.style.display = 'none';
                        mainContent.style.opacity = '1';
                        mainContent.style.pointerEvents = 'auto';
                        notificationPanel.remove();
                        notificationsVisible = false;
                    });
                })
                .catch(error => {
                    console.error('Error fetching pending requests:', error);
                    // Handle errors if any
                });
        }
    });
});
// 
      document.getElementById('del-acc').addEventListener('click', function(){
            window.scrollTo({
        top: 0,
        behavior: 'smooth' // Smooth scrolling behavior
    });
    const allElements = document.querySelectorAll('*:not(#logout)');
document.getElementById('logout').style.overflowX = 'visible';
allElements.forEach(element => {
    element.style.overflowX = 'hidden';
});
            document.getElementsByClassName("main")[0].style.opacity = "0.0";
            document.getElementsByClassName("main")[0].style.overflowX = 'hidden';

            const create_main_div = document.createElement("form");
            create_main_div.action = "http://localhost:3001/delete-account/<%= userData._id %>"
            create_main_div.method = "POST";
            create_main_div.style.opacity = "1";
            document.getElementsByTagName("body")[0].style.display = 'flex';
            document.getElementsByTagName("body")[0].style.alignItems = 'center';
            document.getElementsByTagName("body")[0].style.flexDirection = 'column';

            create_main_div.style.backgroundColor = "white"
            const cross = document.createElement("div");
            cross.innerText = 'X';
            cross.addEventListener('click',()=>{
              
            document.getElementsByClassName("main")[0].style.opacity = "1";
                document.getElementById('creating').remove();
                document.getElementsByTagName("body")[0].style.display = 'block';
            })
            document.getElementsByTagName("header")[0].style.width = '100%';
            cross.style.fontSize = '26px';
            cross.style.position = "absolute";
            cross.style.right = '40px'
            cross.style.top = '40px'
            cross.style.fontWeight = "bold";
            cross.style.cursor = "pointer";
            create_main_div.style.border = "1px solid black";
            create_main_div.style.height = "450px";
            create_main_div.style.position = "absolute";
            create_main_div.style.top = '160px'
            create_main_div.style.padding = '20px';
            create_main_div.style.marginLeft = 'auto'
            create_main_div.style.marginRight = 'auto'
            create_main_div.style.display = 'flex';
            create_main_div.style.alignItems = 'center'
            create_main_div.style.justifyContent = 'center'
            create_main_div.style.flexDirection = 'column';
create_main_div.style.gap = "15px";
const h4 = document.createElement('h4');
h4.innerText = 'Are you sure you want to delete your Account?';
h4.style.textAlign = 'center';
const deleteOrNot = document.createElement('div');
deleteOrNot.style.display = 'flex';
deleteOrNot.style.justifyContent = 'center';
deleteOrNot.style.gap = '8px'
            const noDelete = document.createElement('button');
            noDelete.style.border = 'none'
            noDelete.style.cursor = ' pointer';
            noDelete.innerText = 'No';
            noDelete.style.padding = '0.6rem';
            noDelete.style.backgroundColor = 'black'
            noDelete.style.color = 'white'
            noDelete.style.fontSize = '14px'
            noDelete.addEventListener('click',function(){
            document.getElementsByClassName("main")[0].style.opacity = "1";
                document.getElementById('creating').remove();
                document.getElementsByTagName("body")[0].style.display = 'block';
            })
            const deleteAccount = document.createElement('button');
            deleteAccount.style.border = 'none'
            deleteAccount.style.cursor = ' pointer';
            deleteAccount.innerText = 'Yes';
            deleteAccount.style.padding = '0.6rem';
            deleteAccount.style.backgroundColor = 'black'
            deleteAccount.style.color = 'white'
            deleteAccount.style.fontSize = '14px'
            create_main_div.id = 'creating'
            create_main_div.appendChild(cross);
            create_main_div.style.maxWidth = '600px';
            create_main_div.appendChild(h4)
            deleteOrNot.appendChild(deleteAccount);
deleteOrNot.appendChild(noDelete);
            create_main_div.appendChild(deleteOrNot);
            document.getElementsByTagName("body")[0].appendChild(create_main_div);
        })
        const create_post = document.getElementById("create-post");

        create_post.addEventListener("click",()=>{
            window.scrollTo({
        top: 0,
        behavior: 'smooth' // Smooth scrolling behavior
    });
    const allElements = document.querySelectorAll('*:not(#logout)');
document.getElementById('logout').style.overflowX = 'visible';
allElements.forEach(element => {
    element.style.overflowX = 'hidden';
});
            document.getElementsByClassName("main")[0].style.opacity = "0";
            const create_main_div = document.createElement("form");
            create_main_div.action = "http://localhost:3001/create-post"
            create_main_div.method = "POST";
            create_main_div.style.opacity = "1";
            document.getElementsByTagName("body")[0].style.display = 'flex';
            document.getElementsByTagName("body")[0].style.alignItems = 'center';
            document.getElementsByTagName("body")[0].style.flexDirection = 'column';

            create_main_div.style.backgroundColor = "white"
            const cross = document.createElement("div");
            cross.innerText = 'X';
            cross.addEventListener('click',()=>{
            document.getElementsByClassName("main")[0].style.opacity = "1";
                document.getElementById('creating').remove();
                document.getElementsByTagName("body")[0].style.display = 'block';
            })
            document.getElementsByTagName("header")[0].style.width = '100%';
            cross.style.fontSize = '26px';
            cross.style.position = "absolute";
            cross.style.right = '40px'
            cross.style.top = '40px'
            cross.style.fontWeight = "bold";
            cross.style.cursor = "pointer";
            // create_main_div.style.width = "600px";
            create_main_div.style.border = "1px solid black";
            create_main_div.style.height = "450px";
            create_main_div.style.position = "absolute";
            create_main_div.style.top = '160px'
            create_main_div.style.padding = '20px';
            create_main_div.style.marginLeft = 'auto'
            create_main_div.style.marginRight = 'auto'
            create_main_div.style.display = 'flex';
            create_main_div.style.alignItems = 'center'
            create_main_div.style.justifyContent = 'center'
            create_main_div.style.flexDirection = 'column';
create_main_div.style.gap = "15px";
            const textarea = document.createElement('textarea');
            const id_input = document.createElement('input');
            id_input.value = '<%= userData._id %>'
            id_input.type = 'hidden';
            id_input.name = '_id';
            textarea.style.width = '300px';
            textarea.style.border = 'none';
            textarea.style.outline = 'none';
            textarea.style.background = '#f0f0f0'
            textarea.style.height = '200px'
            textarea.name = 'postDescription';
            const addPost = document.createElement('button');
            addPost.style.border = 'none'
            addPost.style.cursor = ' pointer';
            addPost.innerText = 'Add Post';
           
    //         text-decoration: none;
    // padding: 0.6rem;
    // background-color: black;
    // color: white;
    // background-color: black;
            addPost.style.padding = '0.6rem';
            
            addPost.style.backgroundColor = 'black'
            addPost.style.color = 'white'
            addPost.style.fontSize = '14px'
            textarea.placeholder = "Create a new Post";
            textarea.style.padding = '10px';
            const input_image = document.createElement('input');
            input_image.type = "text";
            input_image.placeholder = "Insert a Post Image URL";
            input_image.style.padding = '10px';
            input_image.name = 'imageUrl';
            create_main_div.id = 'creating'
            create_main_div.appendChild(cross);
            create_main_div.appendChild(textarea);
            create_main_div.appendChild(id_input)
            create_main_div.appendChild(input_image);
            create_main_div.appendChild(addPost);
            // create_main_div.appendChild(id);
            document.getElementsByTagName("body")[0].appendChild(create_main_div);
        })
    </script>
</body>
</html>
